package dao;

import model.SubjectModel;
import utils.DBConnection;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class SubjectDAO {

    public void addSubjectToClass(int classId, String title, String code) throws SQLException {
        Connection conn = DBConnection.getConnection();

        // Check if subject with same title or code exists in this class
        String checkQuery = "SELECT s.id FROM subject s JOIN class_subjects cs ON s.id = cs.subject_id WHERE cs.class_id=? AND (s.title=? OR s.code=?)";
        PreparedStatement checkStmt = conn.prepareStatement(checkQuery);
        checkStmt.setInt(1, classId);
        checkStmt.setString(2, title);
        checkStmt.setString(3, code);
        ResultSet rs = checkStmt.executeQuery();
        if (rs.next()) {
            conn.close();
            return; // Subject already exists in this class
        }

        // Insert subject into subject table
        String insertSubject = "INSERT INTO subject(title, code) VALUES(?, ?)";
        PreparedStatement insertStmt = conn.prepareStatement(insertSubject, Statement.RETURN_GENERATED_KEYS);
        insertStmt.setString(1, title);
        insertStmt.setString(2, code);
        insertStmt.executeUpdate();
        ResultSet generatedKeys = insertStmt.getGeneratedKeys();
        int subjectId = 0;
        if (generatedKeys.next()) {
            subjectId = generatedKeys.getInt(1);
        }

        // Insert into class_subjects
        String link = "INSERT INTO class_subjects(class_id, subject_id) VALUES(?, ?)";
        PreparedStatement linkStmt = conn.prepareStatement(link);
        linkStmt.setInt(1, classId);
        linkStmt.setInt(2, subjectId);
        linkStmt.executeUpdate();

        conn.close();
    }

    public List<SubjectModel> getSubjectsByClassId(int classId) {
        List<SubjectModel> list = new ArrayList<>();
        try (Connection conn = DBConnection.getConnection()) {
            String query = "SELECT s.id, s.title, s.code FROM subject s JOIN class_subjects cs ON s.id = cs.subject_id WHERE cs.class_id=?";
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setInt(1, classId);
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                SubjectModel sub = new SubjectModel();
                sub.setId(rs.getInt("id"));
                sub.setTitle(rs.getString("title"));
                sub.setCode(rs.getString("code"));
                list.add(sub);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return list;
    }

    public void deleteSubjectFromClass(int subjectId, int classId) {
        try (Connection conn = DBConnection.getConnection()) {
            // Remove from class_subjects
            String deleteClassSubject = "DELETE FROM class_subjects WHERE subject_id=? AND class_id=?";
            PreparedStatement stmt1 = conn.prepareStatement(deleteClassSubject);
            stmt1.setInt(1, subjectId);
            stmt1.setInt(2, classId);
            stmt1.executeUpdate();

            // Delete from subject table if not used elsewhere
            String check = "SELECT COUNT(*) FROM class_subjects WHERE subject_id=?";
            PreparedStatement checkStmt = conn.prepareStatement(check);
            checkStmt.setInt(1, subjectId);
            ResultSet rs = checkStmt.executeQuery();
            if (rs.next() && rs.getInt(1) == 0) {
                String deleteSub = "DELETE FROM subject WHERE id=?";
                PreparedStatement stmt2 = conn.prepareStatement(deleteSub);
                stmt2.setInt(1, subjectId);
                stmt2.executeUpdate();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void deleteSubject(int id) {
        try (Connection conn = DBConnection.getConnection()) {
            String query = "DELETE FROM subject WHERE id=?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setInt(1, id);
            ps.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

}
